1/1 @元日
1/9
2/11
2/23
3/21
4/29
5/3
5/4
7/17
8/11
9/18
9/23
10/9
11/3
11/23


.section .text
.global insertday
.type   insertday %function
@insertday r0 文字列 r1 曜日 r2 月の日数 r4 

insertday:
    push    {r1-r10}
    mov     r8, r3      @未使用レジスタ退避
    push    {r8}
    mov     r3, r2
    push    {r3}        @月の日数の退避
    mov     r4, #0
    push    {r4}
@r0文字列 r1 初めの日(曜日)
    mov     r3, r1      @r012は挿入で使うので退避
    mov     r4, #0      @r4 -> 挿入場所の指定
    mov     r5, #0      @r5 -> １週間を数える
    mov     r6, #0      @r6 -> 3マスを数える
    mov     r1, #32     @r1 ->スペース(アスキー32)

@曜日が日曜なら終わり
    cmp     r3, #0
    beq     emptyDayEnd

emptyDay:
    push    {r1-r10, lr}
    bl      insert
    pop     {r1-r10, lr}

    add     r6, r6, #1
    cmp     r6, #3
    moveq   r6, #0
    addeq   r5, r5, #1
    cmp     r3, r5
    beq     emptyDayEnd
    b       emptyDay

emptyDayEnd:

    @r2 ->挿入場所の指定
    @r012は挿入で使うので退避
    @r4 -> 挿入場所の指定
    @r5 -> １週間を数える
    @r6 -> 3マスを数える
    @r7 -> 日付カウント
    @r1 ->スペース(アスキー32)
    @r3 -> 初めに積んだ月の日数
    mov     r7, #1
    pop     {r4}
    pop     {r3}
    pop     {r8}

date:
    @日付がその月の日付を超えてないか確認
    cmp     r7, r3
    bhi     insertEnd

    @\nの確認
    push    {r0-r10, lr}
    mov     r0, r5
    mov     r1, #7
    bl      mod
    cmp     r0, #0
    pop     {r0-r10, lr}
    add     r5, r5, #1

    pusheq  {r1-r10, lr}
    bleq     newline
    popeq   {r1-r10, lr}

    push    {lr}
    bl      insertHoliday
    pop     {lr}
    b       date


weekday:
    @2桁の判断
    push    {r0}
    mov     r0 ,r7
    push    {r0-r9, lr}
    mov     r1, #10
    bl      div
    mov     r10, r0
    cmp     r0, #0
    pop     {r0-r9, lr}
    pop     {r0}
    beq     aDigit
    bne     twoDigit


@1桁の日
aDigit:
    mov     r1, #32

    @強調日表記
    cmp     r7, r8
    moveq   r6, #1
    pusheq  {r1-r9,lr}
    bleq    highLightInsert
    popeq   {r1-r9,lr}
@スペース挿入
    push    {r1-r9,lr}
    bl      insert
    pop     {r1-r9,lr}
    push    {r1-r9,lr}
    bl      insert
    pop     {r1-r9,lr}

    @数字挿入
    add     r1, r1, #16
    add     r1, r1, r7
    push    {r1-r9,lr}
    bl      insert
    pop     {r1-r9,lr}
    add     r7, r7, #1
    
    @強調表記終わり
    cmp     r6, #1
    moveq   r6, #0
    pusheq  {r1-r9,lr}
    bleq    highLightEnd
    popeq   {r1-r9,lr}
    bx      lr

twoDigit:
    mov     r1, #32
    
    @強調日表記
    cmp     r7, r8
    moveq   r6, #1
    pusheq  {r1-r9,lr}
    bleq    highLightInsert
    popeq   {r1-r9,lr}

    @スペース挿入
    push    {r1-r9,lr}
    bl      insert
    pop     {r1-r9,lr}
    
    @2桁目挿入
    mov     r1, #48
    add     r1, r1, r10
    push    {r1-r9,lr}
    bl      insert
    pop     {r1-r9,lr}

    @1桁目数字挿入
    push    {r0-r9, lr}
    mov     r0, r7
    mov     r1, #10
    bl      mod
    mov     r10, r0
    pop    {r0-r9, lr}
    add     r1, r10, #48
    push    {r1-r9,lr}
    bl      insert
    pop     {r1-r9,lr}
    add     r7, r7, #1

    @強調表記終わり
    cmp     r6, #1
    moveq   r6, #0
    pusheq  {r1-r9,lr}
    bleq    highLightEnd
    popeq   {r1-r9,lr}
    bx      lr  

Holiday:
    @2桁の判断
    push    {r0}
    mov     r0 ,r7
    push    {r0-r9, lr}
    mov     r1, #10
    bl      div
    mov     r10, r0
    cmp     r0, #0
    pop     {r0-r9, lr}
    pop     {r0}
    beq     HolidayaDigit
    bne     HolidaytwoDigit


@1桁の日
HolidayaDigit:
    mov     r1, #32

    @強調日表記
    cmp     r7, r8
    moveq   r6, #1
    pusheq  {r1-r9,lr}
    bleq    highLightInsert
    popeq   {r1-r9,lr}
@スペース挿入
    push    {r1-r9,lr}
    bl      insert
    pop     {r1-r9,lr}
    push    {r1-r9,lr}
    bl      insert
    pop     {r1-r9,lr}

    @数字挿入
    add     r1, r1, #16
    add     r1, r1, r7
    push    {r1-r9,lr}
    bl      insert
    pop     {r1-r9,lr}
    add     r7, r7, #1
    
    @強調表記終わり
    cmp     r6, #1
    moveq   r6, #0
    pusheq  {r1-r9,lr}
    bleq    highLightEnd
    popeq   {r1-r9,lr}
    bx      lr

HolidaytwoDigit:
    mov     r1, #32
    
    @強調日表記
    cmp     r7, r8
    moveq   r6, #1
    pusheq  {r1-r9,lr}
    bleq    highLightInsert
    popeq   {r1-r9,lr}

    @スペース挿入
    push    {r1-r9,lr}
    bl      insert
    pop     {r1-r9,lr}
    
    @2桁目挿入
    mov     r1, #48
    add     r1, r1, r10
    push    {r1-r9,lr}
    bl      insert
    pop     {r1-r9,lr}

    @1桁目数字挿入
    push    {r0-r9, lr}
    mov     r0, r7
    mov     r1, #10
    bl      mod
    mov     r10, r0
    pop    {r0-r9, lr}
    add     r1, r10, #48
    push    {r1-r9,lr}
    bl      insert
    pop     {r1-r9,lr}
    add     r7, r7, #1

    @強調表記終わり
    cmp     r6, #1
    moveq   r6, #0
    pusheq  {r1-r9,lr}
    bleq    highLightEnd
    popeq   {r1-r9,lr}
    bx      lr  


insertEnd:
@\0を入れる部分
    push    {r1-r10, lr}
    mov     r1, #0
    bl      insert
    pop     {r1-r10, lr}
    pop     {r1-r10}
    bx      lr


@祝祭日の判定と挿入をする関数
@まとめて祝祭日なら下違うなら上の処理に戻るように考える
insertHoliday:
    @r0 文字列 r1 日 r2 月
    cmp     r4, #1
    pusheq  {lr}
    bleq     Jan
    popeq  {lr}
    cmp     r4, #2
    pusheq  {lr}
    bleq     Feb
    popeq  {lr}
    cmp     r4, #3
    pusheq  {lr}
    bleq     Mar
    popeq  {lr}
    cmp     r4, #4
    pusheq  {lr}
    bleq     Apr
    popeq  {lr}
    cmp     r4, #5
    pusheq  {lr}
    bleq     May
    popeq  {lr}
    cmp     r4, #7
    pusheq  {lr}
    bleq     Jul
    popeq  {lr}
    cmp     r4, #8
    pusheq  {lr}
    bleq     Aug
    popeq  {lr}
    cmp     r4, #9
    pusheq  {lr}
    bleq     Sep
    popeq  {lr}
    cmp     r4, #10
    pusheq  {lr}
    bleq     Oct
    popeq  {lr}
    cmp     r4, #11
    pusheq  {lr}    
    bleq     Nov
    popeq  {lr}
    bx    lr 

Jan:
    cmp     r7, #1
    pusheq  {lr}
    bleq    Holiday
    popeq   {lr}
    beq     janend
    cmp     r7, #9
    pusheq  {lr}
    bleq    Holiday
    popeq   {lr}
    beq     janend
    pushne  {lr}
    blne    weekday
    popne   {lr}
janend:
    bx      lr

Feb:
    cmp     r7, #11
    beq     Holiday
    cmp     r7, #23
    bx      lr

Mar:
    cmp     r7, #21
    bx      lr

Apr:
    cmp     r7, #29
    bx      lr

May:
    cmp     r7, #3

    cmp     r7, #4

    bx      lr

Jul:
    cmp     r7, #17
    bx      lr
   
Aug:
    cmp     r7, #11
    bx      lr

Sep:
    cmp     r7, #18

    cmp     r7, #23
    bx      lr

Oct:
    cmp     r7, #9
    bx      lr

Nov:
    cmp     r7, #3

    cmp     r7, #23
    bx      lr


.section .text
.global newline
.type   newline %function
newline:
    mov     r1, #10
    push    {r1-r10, lr}
    bl      insert
    pop     {r1-r10, lr}
    bx      lr
